---
apiVersion: batch/v1
kind: Job
metadata:
  name: post-install-instana
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
spec:
  template:
    spec:
      containers:
        - name: post-install
          image: quay.io/openshift/origin-cli:latest
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          command:
            - /bin/sh
            - -c
            - |
              #set -o pipefail
              set -x
              result=0

              version=`oc version |grep Server |awk '{print $3}' |tr -d ' '`
              if [ ${#version} -gt 1 ] ; then
                echo "ocp version ${version} "
              else 
                echo "this is an k8s , no need to execute following commands"
                exit 0
              fi
                
              # sa/default in instana-core
              while : ; do
                oc get sa default -n instana-core
                if [[ $? != 0 ]]; then
                  echo 'Serviceaccount "default" not found in namespace instana-core'
                  sleep 10s
                else 
                  break
                fi
              done
              oc adm policy add-scc-to-user anyuid     -z default -n instana-core
              oc adm policy add-scc-to-user privileged -z default -n instana-core
              result=$?
              if [[ ${result} != 0 ]]; then 
                exit "${result}"
              fi

              # sa/instana-core in instana-core
              while : ; do
                oc get sa instana-core -n instana-core
                if [[ $? != 0 ]]; then
                  echo 'Serviceaccount "instana-core" not found in namespace instana-core'
                  sleep 10s
                else 
                  break
                fi
              done
              oc adm policy add-scc-to-user anyuid     -z instana-core -n instana-core
              oc adm policy add-scc-to-user privileged -z instana-core -n instana-core
              result=$?
              if [[ ${result} != 0 ]]; then 
                exit "${result}"
              fi


              # sa/default in instana-unit
              while : ; do
                oc get sa default -n instana-units
                if [[ $? != 0 ]]; then
                  echo 'Serviceaccount "default" not found in namespace instana-units'
                  sleep 10s
                else 
                  break
                fi
              done
              oc adm policy add-scc-to-user anyuid -z default -n instana-units
              result=$?
              if [[ ${result} != 0 ]]; then 
                exit "${result}"
              fi

              #TODO ?? oc adm policy add-scc-to-user anyuid -z instana-prod -n instana-units
              #
              

              base=`oc get ingresses.config/cluster -o jsonpath={.spec.domain}`
              echo ${base}

              # routes 
              cat << EOF | oc apply -f -
              apiVersion: route.openshift.io/v1
              kind: Route
              metadata:
                name: acceptor
                namespace: instana-core
              spec:
                host: agent.instana.${base}
                port:
                  targetPort: 8600
                tls:
                  insecureEdgeTerminationPolicy: Redirect
                  termination: passthrough
                to:
                  kind: Service
                  name: acceptor
              EOF
              result=$?
              if [[ ${result} != 0 ]]; then 
                exit "create route acceptor exit with ${result}"
              fi              

              cat << EOF | oc apply -f -
              apiVersion: route.openshift.io/v1
              kind: Route
              metadata:
                name: gateway-core
                namespace: instana-core
              spec:
                host: instana.${base}
                port:
                  targetPort: 8443
                tls:
                  insecureEdgeTerminationPolicy: Redirect
                  termination: passthrough
                to:
                  kind: Service
                  name: gateway
              EOF
              result=$?
              if [[ ${result} != 0 ]]; then 
                exit "create route gateway-core exit with ${result}"
              fi              

              cat << EOF | oc apply -f -
              apiVersion: route.openshift.io/v1
              kind: Route
              metadata:
                name: gateway-unit
                namespace: instana-core
              spec:
                host: prod-instana.instana.${base}
                port:
                  targetPort: 8443
                tls:
                  insecureEdgeTerminationPolicy: Redirect
                  termination: passthrough
                to:
                  kind: Service
                  name: gateway
              EOF
              result=$?
              if [[ ${result} != 0 ]]; then 
                exit "create route gateway-unit exit with ${result}"
              fi                            

                             

              exit "${result}"
      restartPolicy: Never
      serviceAccountName: default
