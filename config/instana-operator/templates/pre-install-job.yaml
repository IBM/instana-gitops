---
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-install-instana-operator
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "5"
spec:
  template:
    spec:
      containers:
        - name: pre-install
          image: quay.io/openshift/origin-cli:latest
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          command:
            - /bin/sh
            - -c
            - |
              #set -o pipefail
              set -x
              result=0


              echo "============ in pre-install =========="
              ls /root/.kube
              cat /root/.kube/config
              oc config get-contexts

              # cert-manager apply in advance as prereq 
              echo 'Apply cert-manager.yaml ... '
              oc apply -f https://github.com/jetstack/cert-manager/releases/download/v1.6.0/cert-manager.yaml
              # apply cert as cm ??
              #oc apply -f 
              result=$?
              if [[ ${result} != 0 ]]; then 
                 exit "Apply cert-manager.yaml exit with ${result}"
              fi
              sleep 5

              # ns  : can't create this ns 
              echo 'create namespace "instana-operator" '
              # oc get ns instana-operator
              # if [[ $? != 0 ]]; then
              #    echo 'Namespace "instana-operator" not found, now create it.'
              #oc create ns instana-operator 
              # else
              #    echo 'Namespace "instana-operator" found.'
              # fi

              # if ocp, anyuid to sa/default 
              echo 'in ocp, add anyuid to default in instana-operator ...'
              oc adm policy add-scc-to-user anyuid -z default -n instana-operator
              oc adm policy add-scc-to-user anyuid -z instana-operator -n instana-operator
              result=$?
              if [[ ${result} != 0 ]]; then 
                exit "${result}"
              fi


              # imagePullSecrets ?
              echo "create secret instana-registry "
              oc create secret docker-registry instana-registry --namespace instana-operator \
                  --docker-username=_ \
                  --docker-password={{ .Values.INSTANA_DOWNLOAD_KEY }} \
                  --docker-server=containers.instana.io

              # --- ocp only below ---
              version=`oc version |grep Server |awk '{print $3}' |tr -d ' '`
              if [ ${#version} -gt 1 ] ; then
                echo "ocp version ${version} "
              else 
                echo "this is an k8s , no need to execute following commands"
                exit 0
              fi

              exit 0
            

          volumeMounts:
          - mountPath: /root/.kube
            name: kubeconfig              
      volumes:
      - name: kubeconfig
        secret:
          defaultMode: 420
          items:
          - key: credentials
            path: config
          secretName: kubeconfig
      restartPolicy: Never
      serviceAccountName: instana-operator-hook
