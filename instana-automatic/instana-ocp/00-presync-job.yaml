apiVersion: batch/v1
kind: Job
metadata:
  name: add-scc-policy
  annotations:
    argocd.argoproj.io/hook: PostSync
spec:
  template:
    spec:
      containers:
        - name: scc-policy
          image: quay.io/openshift/origin-cli:latest
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          command:
            - /bin/sh
            - -c
            - |
              set -eo pipefail
              set -x
              result=0

              while : ; do
                oc get sa instana-core -n instana-core
                if [[ $? != 0 ]]; then
                  echo 'Serviceaccount "instana-core" not found in namespace instana-core'
                  sleep 10s
                else 
                  break
                fi
              done
              oc adm policy add-scc-to-user anyuid -z instana-core -n instana-core
              result=$?
              if [[ ${result} != 0 ]]; then 
                exit "${result}"
              fi

              while : ; do
                oc get sa default -n instana-core
                if [[ $? != 0 ]]; then
                  echo 'Serviceaccount "default" not found in namespace instana-core'
                  sleep 10s
                else 
                  break
                fi
              done
              oc adm policy add-scc-to-user anyuid -z default -n instana-core
              result=$?
              if [[ ${result} != 0 ]]; then 
                exit "${result}"
              fi

              while : ; do
                oc get sa default -n instana-units
                if [[ $? != 0 ]]; then
                  echo 'Serviceaccount "default" not found in namespace instana-units'
                  sleep 10s
                else 
                  break
                fi
              done
              oc adm policy add-scc-to-user anyuid -z default -n instana-units
              result=$?
              if [[ ${result} != 0 ]]; then 
                exit "${result}"
              fi

              exit "${result}"
          volumeMounts:
          - mountPath: /root/.kube
            name: kubeconfig              
      restartPolicy: Never
      serviceAccountName: crossplane
      volumes:
      - name: kubeconfig
        secret:
          defaultMode: 420
          items:
          - key: credentials
            path: config
          secretName: k8s-kubeconfig